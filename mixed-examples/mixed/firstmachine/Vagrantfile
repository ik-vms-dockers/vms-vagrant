# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure('2') do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.
  if Vagrant.has_plugin?('vagrant-vbguest')
    config.vbguest.auto_update = true
    config.vbguest.no_remote = true
  end

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  config.vm.define 'first_vm', primary: true, autostart: true do |host|
    host.vm.hostname = 'host-linux'
    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://atlas.hashicorp.com/search.
    host.vm.box = 'precise64'
    host.vm.box_url = 'http://files.vagrantup.com/precise64.box'
    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    host.vm.network(:private_network, ip: '10.0.0.8')
    # port forwarded
    host.vm.network(:forwarded_port, guest: 80, host: 8080, auto_correct: true)
    # Share folders
    host.vm.synced_folder('src/', '/home/vagrant/data', mount_options: ['dmode=777','fmode=777'])

    config.vm.provider :virtualbox do |vb|
      # Display the VirtualBox GUI when booting the machine
      vb.gui = false

      # Customize the vm
      vb.customize ['modifyvm', :id, '--name', 'host-vm']
      vb.customize ['modifyvm', :id, '--cpus', 1]
      vb.customize ['modifyvm', :id, '--usb', 'off']
      vb.memory = '1024'
    end

    host.vm.provision 'shell' do |s|
      s.path = 'src/setup.sh'
      # s.inline = $setupscript
    end
  end

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision :shell, inline: <<-SHELL
    echo 'Provisioned from inline script'
    # apt-get update
    # apt-get install -y apache2
  SHELL
end
