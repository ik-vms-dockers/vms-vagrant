# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  if Vagrant.has_plugin?('vagrant-vbguest')
    config.vbguest.auto_update = true
    config.vbguest.no_remote = true
  end

  config.vm.define 'first_vm', primary: true, autostart: true do |host|
    host.vm.hostname = 'base-box'
    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://atlas.hashicorp.com/search.
    # config.vm.box = "ubuntu/xenial64"
    host.vm.box = 'ubuntu/xenial64'
    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    host.vm.network(:private_network, ip: '10.0.0.9')
    # port forwarded
    #host.vm.network(:forwarded_port, guest: 80, host: 8080, auto_correct: true)
    # Share folders
    #host.vm.synced_folder('src/', '/home/vagrant/data', mount_options: ['dmode=777','fmode=777'])

    config.vm.provider :virtualbox do |vb|
      # Display the VirtualBox GUI when booting the machine
      vb.gui = false

      # Customize the vm
      vb.customize ['modifyvm', :id, '--name', 'aws-ecs-service']
      vb.customize ['modifyvm', :id, '--cpus', 1]
      vb.customize ['modifyvm', :id, '--usb', 'off']
      vb.customize ["modifyvm", :id, "--vram", 256]
      vb.customize ["modifyvm", :id, "--memory", 1024]
      # name and description
      vb.customize ["modifyvm", :id, "--description", "Base box to test different installations"]
    end

    host.vm.provision "shell", inline: "sudo apt-get update"
    host.vm.provision "shell", inline: "sudo apt-get install -y xfce4 virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11"
  # Permit anyone to start the GUI
    host.vm.provision "shell", inline: "sudo sed -i 's/allowed_users=.*$/allowed_users=anybody/' /etc/X11/Xwrapper.config"

    # host.vm.provision 'shell', path: 'provision/soft-install.sh', privileged: true
    # host.vm.provision 'shell', path: 'provision/sshkey.sh', privileged: false
    # host.vm.provision 'shell', path: 'provision/awscli.sh', privileged: false
    # host.vm.provision 'shell', path: 'provision/docker.sh', privileged: false
    # host.vm.provision 'shell', path: 'provision/cleaner.sh', privileged: false

  end
end
